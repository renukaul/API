{
	"info": {
		"_postman_id": "339b45aa-d4da-4bb9-bf62-db694019472e",
		"name": "Reqres CRUD E2E",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a new record in database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assertion1 - Status Code Check\r",
							"pm.test(\"Status code is check\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"// Assertion2 - Response value\r",
							"//pm.test(\"Check If the Response contains the expect Name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"renu\");\r",
							"//});\r",
							"//pm.test(\"Check If the Response contains the expect job\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Test Analyst\");\r",
							"//});\r",
							"pm.test(\"Check key-value pairs in the response \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"renu\");\r",
							"    pm.expect(jsonData.job).to.eql(\"Test Analyst\");\r",
							"       \r",
							"});\r",
							"\r",
							"// set env variable\r",
							"pm.test(\"set env varilable\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"EmpId\",jsonData.id)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"renu\",\r\n    \"job\": \"Test Analyst\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/api/users",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Udate Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assert 1 - Status code check\r",
							"pm.test(\"Status code is check\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Assert 2 - Response value\r",
							"pm.test(\"Check key-value pairs in the response \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Rain\");\r",
							"    pm.expect(jsonData.job).to.eql(\"Test Analyst\");\r",
							"});  \r",
							"\r",
							"\r",
							" \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Rain\",\r\n    \"job\": \"Test Analyst\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/api/users}/{{EmpId}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users}",
						"{{EmpId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assert 1 - Status code check\r",
							"\r",
							"pm.test(\"Status code check\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/api/users/{{EmpId}}",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users",
						"{{EmpId}}"
					]
				}
			},
			"response": []
		}
	]
}